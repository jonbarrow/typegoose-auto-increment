name: Node.js Tests

on:
  pull_request:
  push:
    branches:
      - '*'
      - '!gh-pages'
    # paths: # only run this deploy if an file in the following directories are changed
    #   - 'src/**'
    #   - 'test/**'
    #   - '*.json' # run if an ".json" file in the *root* of the repository is changed

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x, 18.x, 19.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load MongoDB binary cache
        id: cache-mongodb-binaries
        uses: actions/cache@v3
        with:
          path: ~/.cache/mongodb-binaries
          key: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Audit
        run: (yarn audit || exit 0)
      - name: Test Compiling Everything
        run: yarn run build:tests
      - name: Lint
        run: yarn run lint
      - name: Test
        run: yarn run test:coverage --colors
        env:
          CI: true
      - name: Send codecov.io stats
        if: matrix.node-version == '14.x'
        uses: codecov/codecov-action@v2
  publish:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta'
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Load MongoDB binary cache
        id: cache-mongodb-binaries
        uses: actions/cache@v3
        with:
          path: ~/.cache/mongodb-binaries
          key: publish
      - name: Install node_modules
        run: yarn install
      - name: Build
        run: yarn build
      - name: Semantic Release (publish to npm)
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
